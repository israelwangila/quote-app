{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/quote-details/quote-details.component.ts","./src/app/quote-details/quote-details.component.html","./src/app/quote-form/quote-form.component.ts","./src/app/quote-form/quote-form.component.html","./src/app/quote.ts","./src/app/quote/quote.component.ts","./src/app/quote/quote.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {Quote} from './quote';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Quotes';\n  // quotes:Quote[]=[\n  //  new Quote ('Kim','quote'),\n  //  new Quote ('alex', 'I will Be there')\n  // ];\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.5.8/angular.min.js\"></script>\n  <title>Quotes Arena</title>\n</head>\n<body>\n  <nav class=\"navbar navbar-expand-lg navbar-light fixed-top mynav\" class=\"navbar navbar-light\" style=\"background-color: #e3f2fd;\">\n\t\t<div class=\"container\">\n\t\t\t<p class=\"navbar-brand\" id=\"header\"style=\"color:black\">Quotes Arena</p>\n\t\t</div>\n\t</nav>\n  <app-quote></app-quote>\n  <br>\n  <hr>\n  <div>\n    <footer>\n      \n    </footer>\n  </div>\n</body>\n</html>\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteDetailsComponent } from './quote-details/quote-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteFormComponent,\n    QuoteComponent,\n    QuoteDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Quote } from '../quote';\n\n@Component({\n  selector: 'app-quote-details',\n  templateUrl: './quote-details.component.html',\n  styleUrls: ['./quote-details.component.css']\n})\nexport class QuoteDetailsComponent implements OnInit {\n\n  @Input() quote:Quote;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  numberOfLikes: number=0;\n\n  numberOfDislikes:number=0;\n\n  likeButtonClick(){\n    this.numberOfLikes++;\n  }\n\n  dislikeButtonClick(){\n    this.numberOfDislikes++;\n  \n     } \n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n          <p><button class=\"btn btn-primary\" (click)='likeButtonClick()'>Like</button>{{numberOfLikes}}</p> \n        </div>\n        <div class=\"col-sm-6\">\n         <p><button class=\"btn btn-info\"(click)='dislikeButtonClick()'>Dislike</button>{{numberOfDislikes}}</p> \n        </div>\n    </div>\n    <div class=\"like\">\n        <!-- <p id=\"like\" ><span (click)=\"likeButtonClick()\"><img class=\"logo\" src=\"https://bit.ly/34d4BFZ\"/></span>{{numberOfLikes}} </p>\n        <p id=\"dislike\"><span (click)=\"dislikeButtonClick()\"><img class=\"logo\" src=\"https://bit.ly/2V37pB0\"/></span> {{numberOfDislikes}}</p>\n    \n      </div> -->\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {Quote} from '../quote';\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\nexport class QuoteFormComponent implements OnInit {\n  // quotes:Quote[]=[\n  //   new Quote ('Kim','quote'),\n  //   new Quote ('alex', 'I will Be there')\n  newQuote = new Quote(\"\",\"\",\"\");\n@Output() addQuote= new EventEmitter<Quote>();\n\nsubmitQuote(){\n  this.addQuote.emit(this.newQuote);\n  // reseting of form\n  this.newQuote = new Quote(\"\",\"\",\"\");\n}\n  constructor() { }\n\n  ngOnInit(){\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h2 class=\"text-center\">Create Your Own Quote</h2>\n    <hr>\n    <form (ngSubmit)='submitQuote()' #quotesForm='ngForm'>\n        <div class=\"form-group\">\n  \n            <label for=\"name\">Name</label>\n            <input type=\"text\" [(ngModel)]=\"newQuote.name\"#name='ngModel' required class=\"form-control\"name='name' id=\"Name\">\n            <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n                <p>Name is required</p>\n            </div>\n        </div>\n        <div class=\"form-group\">\n  \n            <label for=\"Author\">Author</label>\n            <input type=\"text\" [(ngModel)]=\"newQuote.author\"#author='ngModel' required class=\"form-control\"name='author' id=\"author\">\n            <div [hidden]=\"author.valid || author.pristine\" class=\"alert alert-danger\">\n                <p>Author's name is required</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n  \n            <label for=\"description\">Your Quote</label>\n            <textarea class=\"form-control\"  [(ngModel)]=\"newQuote.quote\" #quote='ngModel' name='quote' rows=\"4\" required></textarea>\n            <div [hidden]=\"quote.valid || quote.pristine\" class=\"alert alert-danger\">\n                <p>Qoute is required</p>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-success\">POST QUOTE</button>\n    </form>\n  </div>\n","export class Quote {\n    // quote:string;\n    constructor( public author:string, public quote:string, public name: string){\n        this.name;\n        this.quote;\n        this.author;\n    };\n    // author:string;\n    // saying:string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Quote} from '../quote';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n  quotes:Quote[]=[\n    new Quote('Quincy','Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you have settle. As with all matters of the heart','Mr.Kennedy'),\n    new Quote ('Mandela','Of all the inventions of humans, the computer is going to rank near or at the top as history unfolds and we look back. It is the most awesome tool that we have ever invented. I feel incredibly lucky to be at exactly the right place in Silicon Valley, at exactly the right time, historically, where this invention has taken form.','Alex'),\n   ];\n\n   newQuote={}\n\n\n\n\n  //  quoteDelete(complete:boolean){\n  //   this.isComplete.emit(complete);\n  // }\n  constructor() { }\n\n  ngOnInit(){\n  }\n\n  addNewQuote(quote){\n    this.quotes.unshift(quote);\n    console.log(quote);\n  }\n\n  deleteQuote(quote){\n    console.log(quote)\n\n    for(var i=0; i<this.quotes.length; i++){\n      if(quote){\n        let quote= confirm('Are you sure you want to Delete this Quotes')\n        // if(this.quotes[i]==quote){\n        //   this.quotes.splice(i, 1);\n      }\n      if(this.quotes[i]==quote){\n        this.quotes.splice(i, 1);\n      }\n    }\n  }\n\n}\n","<!-- <div>\n    <ul>\n      <li *ngFor='let quote of quotes'>\n        {{quote.author}}<br>{{quote.quote}}\n        <button (click)='deleteQuote(quote)'>Delete</button>\n      </li>\n      <app-quote-form (addQuote)=\"addNewQuote($event)\"></app-quote-form>\n  </ul>\n  </div> -->\n  <div class=\"container jumbotron\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"card\" style=\"width: 30rem;\">\n          <div>\n            <br>\n            <ul>\n              <li *ngFor='let quote of quotes'>\n                <h6 class=\"card-subtitle mb-2 text-muted\">Posted By: {{quote.name}}</h6>\n                <div class=\"card-body\">\n                  <h5>{{quote.quote}}</h5>\n                  <br>\n                  <h4>By:{{quote.author}}</h4>\n                </div>\n                <app-quote-details></app-quote-details>\n                <button id=\"margin\" (click)='deleteQuote(quote)'class=\"btn btn-sm btn-danger\">Delete</button>\n                <br>\n              </li>\n              <br>\n          </ul>\n          </div>\n        </div>\n        <br>\n      </div>\n      <br>\n      <div class=\"col-md-6\">\n        <br>\n        <app-quote-form (addQuote)=\"addNewQuote($event)\"></app-quote-form>\n      </div>\n    </div>\n\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}